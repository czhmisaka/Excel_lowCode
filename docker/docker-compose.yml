services:
  # 前端服务
  frontend:
    image: annual-leave-frontend:latest
    container_name: annual-leave-frontend
    ports:
      - "${FRONTEND_PORT}:80"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:80/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    build:
      context: ..
      dockerfile: docker/frontend/Dockerfile
      args:
        - VITE_API_BASE_URL=/backend

  # 后端服务
  backend:
    image: annual-leave-backend:latest
    container_name: annual-leave-backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - backend-uploads:/app/uploads
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# 网络配置
networks:
  app-network:
    driver: bridge

# 卷配置
volumes:
  backend-uploads:
    driver: local
